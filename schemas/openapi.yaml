openapi: 3.0.0
info:
  version: 1.0.0
  title: Trading Licence Demo
  description: Trading Licence Website
  contact:
    name: Isaac Eriya
    email: eriyai@coventry.ac.uk
  license:
    name: Apache 2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0.html'
servers:
  - url: 'https://sardine-shock-3000.codio-box.uk/api/v1'
    description: Server
tags:
  - name: Users
    description: API endpoints for user management.
  - name: Articles
    description: Access and perform CRUD operations on blog entries.
  - name: Messages
    description: Allows user to send messages to the admin
  
paths:
  /users:
    summary: Represents an individual user
    description: >
      This resource represents an individual user in the system.
      Each user is identified by a numeric `id`.
    post:
      tags:
        - Users
      description:
        Create a new user account.
      requestBody:
        description: All new user data.
        required: true
        content:
          application/json:
            schema:
              $ref: ./user.json#/definitions/user
      responses:
        '201':
          description: User created
          content:
            application/json:
              schema:
                $ref: ./user.json#/definitions/userUpdated
    get:
      tags:
        - Users
      description:
        Get a list of all users.
      responses:
        '200':
          description: List of users
          content:
            application/json:
              schema:
                $ref: ./user.json#/definitions/userList
        '401':
          description: Only admin users can list all accounts
  /users/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
        description: Numeric id of the user
    get:
      tags:
        - Users
      description:
        Get user by id.
      responses:
        '200':
          description: View of user record
          content:
            application/json:
              schema:
                $ref: ./user.json#/definitions/userView
        '401':
          description: Non-admin users can only view their own record
        '404':
          description: Not found
    put:
      tags:
        - Users
      description:
        Update user by id.
      requestBody:
        description: Update a visible property or the password.
        required: true
        content:
          application/json:
            schema:
              $ref: ./user.json#/definitions/userUpdate
      responses:
        '200':
          description: Confirmation and link to record.
          content:
            application/json:
              schema:
                $ref: ./user.json#/definitions/userUpdated
        '404':
          description: Not found
    delete:
      tags:
        - Users
      description:
        Delete user by id.
      responses:
        '200':
          description: Confirmation of deletion.
          content:
            application/json:
              schema:
                $ref: ./user.json#/definitions/userDeleted
        '401':
          description: Only admin users can delete accounts
        '404':
          description: Not found
          
                    
  /articles:
    summary: Represents an individual Article
    description: >
      This resource represents an individual article in the system.
      Each user is identified by a numeric `id`.
    post:
      tags:
        - Articles
      description:
        Create a Article.
      requestBody:
        description: All new Article data.
        required: true
        content:
          application/json:
            schema:
              $ref: ./article.json#/definitions/article
      responses:
        '201':
          description: Article created
          content:
            application/json:
              schema:
                $ref: ./article.json#/definitions/articleUpdated
    get:
      tags:
        - Articles
      description:
        Get a list of all articles.
      responses:
        '200':
          description: List of articles
          content:
            application/json:
              schema:
                $ref: ./article.json#/definitions/articleList
        '401':
          description: Only admin articles can list all accounts
  /articles/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
        description: Numeric id of the article
    get:
      tags:
        - Articles
      description:
        Get article by id.
      responses:
        '200':
          description: View of article record
          content:
            application/json:
              schema:
                $ref: ./article.json#/definitions/articleView
        '401':
          description: Non-admin users can only view their own articles
        '404':
          description: Not found
    put:
      tags:
        - Articles
      description:
        Update article by id.
      requestBody:
        description: Update a visible property or the password.
        required: true
        content:
          application/json:
            schema:
              $ref: ./article.json#/definitions/articleUpdate
      responses:
        '200':
          description: Confirmation and link to record.
          content:
            application/json:
              schema:
                $ref: ./article.json#/definitions/articleUpdated
        '404':
          description: Not found
    delete:
      tags:
        - Articles
      description:
        Delete article by id.
      responses:
        '200':
          description: Confirmation of deletion.
          content:
            application/json:
              schema:
                $ref: ./article.json#/definitions/articleDeleted
        '401':
          description: Only admin articles can delete accounts
        '404':
          description: Not found                

  /messages:
    summary: Represents an individual Message
    description: >
      This resource represents an individual message in the system.
      Each user is identified by a numeric `id`.
    post:
      tags:
        - Messages
      description:
        Create a Message.
      requestBody:
        description: All new Messages data.
        required: true
        content:
          application/json:
            schema:
              $ref: ./article.json#/definitions/article
      responses:
        '201':
          description: Messages created
          content:
            application/json:
              schema:
                $ref: ./article.json#/definitions/articleUpdated
    get:
      tags:
        - Messages
      description:
        Get a list of all messages.
      responses:
        '200':
          description: List of messages
          content:
            application/json:
              schema:
                $ref: ./article.json#/definitions/articleList
        '401':
          description: Only admin can list all messages
  /messages/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
        description: Numeric id of the message
    get:
      tags:
        - Messages
      description:
        Get message by id.
      responses:
        '200':
          description: View of message record
          content:
            application/json:
              schema:
                $ref: ./article.json#/definitions/articleView
        '401':
          description: Non-admin users can only view their own message
        '404':
          description: Not found
    put:
      tags:
        - Messages
      description:
        Update message by id.
      requestBody:
        description: Update a visible property or the password.
        required: true
        content:
          application/json:
            schema:
              $ref: ./article.json#/definitions/articleUpdate
      responses:
        '200':
          description: Confirmation and link to record.
          content:
            application/json:
              schema:
                $ref: ./article.json#/definitions/articleUpdated
        '404':
          description: Not found
    delete:
      tags:
        - Messages
      description:
        Delete message by id.
      responses:
        '200':
          description: Confirmation of deletion.
          content:
            application/json:
              schema:
                $ref: ./article.json#/definitions/articleDeleted
        '401':
          description: Only admin can delete messages
        '404':
          description: Not found   
   
